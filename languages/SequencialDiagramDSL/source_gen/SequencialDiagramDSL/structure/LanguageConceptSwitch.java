package SequencialDiagramDSL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Actor = 0;
  public static final int Alt = 1;
  public static final int AsyncFunction = 2;
  public static final int Class = 3;
  public static final int Event = 4;
  public static final int Expression = 5;
  public static final int Function = 6;
  public static final int FunctionParameter = 7;
  public static final int Loop = 8;
  public static final int Model = 9;
  public static final int NewObjectFunction = 10;
  public static final int Object = 11;
  public static final int ObjectExpression = 12;
  public static final int ObjectExpressionInstance = 13;
  public static final int ObjectExpressionReference = 14;
  public static final int Opt = 15;
  public static final int Ref = 16;
  public static final int ReturnValue = 17;
  public static final int ReturnValueInstance = 18;
  public static final int ReturnValueReference = 19;
  public static final int Structure = 20;
  public static final int SyncFunction = 21;
  public static final int Type = 22;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xa40b2b6aa7624d4dL, 0xa6710bcaedd9d57eL);
    builder.put(0x4ad1f17994f7d0b1L, Actor);
    builder.put(0x4ad1f17994f63fc0L, Alt);
    builder.put(0x4ad1f17994f63e37L, AsyncFunction);
    builder.put(0x6c34d263b52968d4L, Class);
    builder.put(0x4ad1f17994f63d7eL, Event);
    builder.put(0x4ad1f17994f63fc3L, Expression);
    builder.put(0x4ad1f17994f63d81L, Function);
    builder.put(0x20d68e7f8257dad8L, FunctionParameter);
    builder.put(0x4ad1f17994f63fbfL, Loop);
    builder.put(0x4ad1f17994f53793L, Model);
    builder.put(0x311ac1fe639f0326L, NewObjectFunction);
    builder.put(0x4ad1f17994f63e3bL, Object);
    builder.put(0x3709a383eefc0847L, ObjectExpression);
    builder.put(0x3709a383eefc0819L, ObjectExpressionInstance);
    builder.put(0x3709a383eefc081aL, ObjectExpressionReference);
    builder.put(0x64e214356fd6e8e9L, Opt);
    builder.put(0x64e214356fdd2dcdL, Ref);
    builder.put(0x20d68e7f82661ee6L, ReturnValue);
    builder.put(0x20d68e7f82661ee1L, ReturnValueInstance);
    builder.put(0x20d68e7f82661ee2L, ReturnValueReference);
    builder.put(0x4ad1f17994f63fbbL, Structure);
    builder.put(0x4ad1f17994f63d93L, SyncFunction);
    builder.put(0x6c34d263b51f34c3L, Type);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
